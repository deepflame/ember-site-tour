{{title 'Mixin'}}

<ol class="breadcrumb">
  <li class="active">
    {{#link-to 'index'}}
      Home
    {{/link-to}}
  </li>
  <li>
    {{#link-to 'usage'}}
      Usage
    {{/link-to}}
  </li>
  <li class="active">
    Mixin
  </li>
</ol>

<h1>RouteTour Mixin</h1>

<p>
  A <i>route-tour</i>-Mixin is provided that can be included in routes where you want to include a tour.
</p>

{{#code-block language='javascript'}}// app/index/route.js
import Ember from 'ember';
import TourMixin from 'ember-site-tour/mixins/route-tour';

export default Ember.Route.extend(TourMixin);{{/code-block}}

<p>
  This mixin is just a convenience, and can be very easily changed for more complex needs. It basically does the following:
</p>

{{#code-block language='javascript'}}// ember-site-tour/mixins/route-tour.js
import Ember from 'ember';
const { get } = Ember;

export default Ember.Mixin.create({
  tourManager: Ember.inject.service(),

  setupController(controller, model) {
    this._super(...arguments);

    let tourName = get(this, 'routeName');
    let tour = this.get('tourManager').setupTour(tourName, model);
    controller.set('tour', tour);
  }
});{{/code-block}}

<p>
  In addition, the mixin will also hide all callouts & running tours on <i>resetController</i>.
</p>

<p>
  It is also possible to just include the <i>resetController</i> or <i>setupController</i> parts on their own:
</p>

{{#code-block language='javascript'}}// app/index/route.js
import Ember from 'ember';
import { ResetControllerMixin, SetupControllerMixin } from 'ember-site-tour/mixins/route-tour';

export default Ember.Route.extend(SetupControllerMixin, ResetControllerMixin);{{/code-block}}